<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://kmaherx.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://kmaherx.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-05-27T00:57:53+00:00</updated><id>https://kmaherx.github.io/feed.xml</id><title type="html">blank</title><subtitle># A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Defining multicellular regions</title><link href="https://kmaherx.github.io/blog/2025/regions/" rel="alternate" type="text/html" title="Defining multicellular regions"/><published>2025-05-15T00:00:00+00:00</published><updated>2025-05-15T00:00:00+00:00</updated><id>https://kmaherx.github.io/blog/2025/regions</id><content type="html" xml:base="https://kmaherx.github.io/blog/2025/regions/"><![CDATA[<h2 id="region-components">Region components</h2> <h3 id="large-scale-patterns">Large-scale patterns</h3> <p>As we saw in the <a href="/blog/2025/graph-fourier/">last post</a>, low-pass filtering isolates large-scale patterns. Recall that low-pass filtering corresponds to multiplying our data matrix by a function of the graph Laplacian matrix. Let’s resume this thought by defining our variables so we are all roughly on the same page.</p> <p>Our gene expression is given by the cell-by-gene matrix</p> \[\mathbf{X} \in \mathbb{R}^{c \times g},\] <p>where $c$ is the number of cells and $g$ is the number of genes.</p> <p>One might think that performing conventional single-cell analysis on low-pass filtered data would identify large-scale transcriptional features over the tissue (as opposed to cell type features). In this section, we will show that this is indeed the case.</p> <p>First, we can visualize the result of performing low-pass filtering on a given gene expression signal over the tissue. Consider a marker gene for one of the inner regions of our tissue. Drag the slider left to right to compare the signal before and after filtering.</p> <style>.slider-with-shadows{--default-handle-shadow:0 0 5px rgba(0,0,0,1);--divider-shadow:0 0 5px rgba(0,0,0,0.5)}</style> <div style="width: 50%; max-width: 768px; margin: 0 auto;"> <img-comparison-slider class="slider-with-shadows"> <figure slot="first"> <picture> <source class="responsive-img-srcset" srcset="/assets/figures/regions/unfiltered_signal-480.webp 480w,/assets/figures/regions/unfiltered_signal-800.webp 800w,/assets/figures/regions/unfiltered_signal-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/figures/regions/unfiltered_signal.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <figure slot="second"> <picture> <source class="responsive-img-srcset" srcset="/assets/figures/regions/lowpass_signal-480.webp 480w,/assets/figures/regions/lowpass_signal-800.webp 800w,/assets/figures/regions/lowpass_signal-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/figures/regions/lowpass_signal.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </img-comparison-slider> </div> <figcaption><strong>Figure 1:</strong> [Interactive] Comparison of a gene expression signal before (left) and after (right) filtering. </figcaption> <p>Note that the small-scale variation in expression has been washed away. Neighboring cells are forced to look more similar to one another, in effect isolating only <em>large</em>-scale patterns.</p> <h3 id="gene-gene-relationships">Gene-gene relationships</h3> <p>Now that we’ve isolated large-scale gene expression patterns, we can start to compare them to find interesting gene-gene relationships. Intuitively, a group of expression patterns that overlap should represent a region. We can find these groups by looking at pairwise relationships between genes, namely via covariance.</p> <p>Let $\mathbf{\bar X} = [\mathbf{\bar x_1} | … | \mathbf{\bar x_g}] \in \mathbb{R}^{c \times g}$ represent the cell-by-gene matrix of low-pass filtered gene signals. The relationships between all pairs of genes can be represented in terms of covariance. Assuming mean centering, this “low-pass covariance matrix” is given by</p> \[\mathbf{C} = \mathbf{\bar X}^{\top} \mathbf{\bar X} \in \mathbb{R}^{g \times g},\] <p>with entry $\mathbf{C}_{ij} = \mathbf{x_i}^{\top} \mathbf{x_j}$ being the similarity between genes $i$ and $j$. We drop the bar notation for simplicity going forward. Note that, for quantitative simplicity, we do not perform mean centering and find that it rarely impacts the results.</p> <p>We can visualize $\mathbf{C}$ as an image. Gene markers for each region form red blocks along the diagonal, denoting positively covarying groups of genes, i.e. gene programs. Gene programs describing different regions can be seen to negatively correlate, forming blue blocks along the off-diagonal.</p> <p>Ultimately, we seek to distill these patterns of complementary gene programs into a simpler representation – perhaps by assigning each gene a single value. Let $\mathbf{u} \in \mathbb{R}^{c}$ represent this desired representation. If $\mathbf{u}$ is a good representation, it should produce a similar covariance pattern to $\mathbf{C}$. This can be quantified as</p> \[\sum_{ij} \mathbf{C}_{ij} (\mathbf{u}_i \mathbf{u}_j).\] <p>Thus, we wish to find the embedding $\mathbf{u}$ that maximizes this expression.</p> <hr/> <h2 id="gradients">Gradients</h2> <p>The above components indeed appear to contain orthogonal information. They each describe unique sets of regions. Together, however, these features can describe more complex region patterns. Rather than projecting cells onto a single component, one can instead project onto multiple components that form a multidimensional “region space”. For instance, we can project cells onto the space defined by the top three components by calculating</p> \[\mathbf{S} = \mathbf{X} \mathbf{U} \in \mathbb{R}^{c \times 3}\] <p>where $\mathbf{U} = [\mathbf{u}_1 | \mathbf{u}_2 | \mathbf{u}_3]$. Cells can then be plotted in the resulting three-dimensional space Figure.</p> <p>Note that the cells appear to form a one-dimensional manifold. In order to interpret this manifold, one can first fit a line to it and visualize it in tissue space. To fit a line, we first connect neighboring cells in this region space using a weighted Delaunay triangulation. Cells closer to one another have higher weights while those further from one another have lower weights. This provides a \textit{domain} in region space. We can then calculate and eigendecompose the corresponding Laplacian matrix to find the lowest eigenvector which represents the lowest frequency and thus the longest path through the domain. The result is the coloring shown in Figure. Note that this approach is essentially the same as diffusion maps, which is a conventional single-cell trajectory inference method.</p> <iframe src="/assets/plotly/region_gradient.html" frameborder="0" scrolling="yes" height="500px" width="100%" style="border: none; display: block; margin: 0 auto;"></iframe> <p>The resulting coloring reveals a continuous, molecularly defined “depth” axis, as seen when plotted in the tissue. We could alternatively make sense of this manifold given the components plotted in. Component 1 describes an “inside-outside” pattern with only the outermost layer considered outside. Component 2 then splits the inside layers from component 1 in the same way. Finally, component 3 further splits the inside layers from component 2. Thus, together, these features can distinguish each layer, while the inside-outside patterns enable the layers to be related to one another in terms of depth.</p> <figure style="text-align: center;"> <img src="/assets/figures/regions/region_gradient.png" alt="" style="width:50%; display: block; margin: 0 auto;"/> <figcaption><strong>Figure 3:</strong> Molecular gradient visualized in the tissue.</figcaption> </figure> <hr/> <h2 id="clusters">Clusters</h2> <p>Nice.</p>]]></content><author><name>Kamal Maher</name></author><summary type="html"><![CDATA[A principled approach to representing molecularly-defined regions in spatial omics data]]></summary></entry><entry><title type="html">Transcriptional signals over tissue domains</title><link href="https://kmaherx.github.io/blog/2025/graph-fourier/" rel="alternate" type="text/html" title="Transcriptional signals over tissue domains"/><published>2025-05-14T00:00:00+00:00</published><updated>2025-05-14T00:00:00+00:00</updated><id>https://kmaherx.github.io/blog/2025/graph-fourier</id><content type="html" xml:base="https://kmaherx.github.io/blog/2025/graph-fourier/"><![CDATA[<p>Here, we will build an intuition for how to describe frequencies over graphs in terms of gene expression over biological tissues. We will use simulations to</p> <h2 id="the-fourier-transform">The Fourier transform</h2> <p>When we think of music,</p> <p>This kind of thinking also applies to space rather than time. For instance, it could be applied to images, which are not one dimensional and continuous, but rather two dimensional and discrete. But the notion of frequency remains;</p> <p>But what if some of these connections between pixels were removed? What if some were added? In other words, we can ask more generally: what if our domain was a graph?</p> <hr/> <h2 id="the-tissue-domain">The tissue domain</h2> <p>There are many different examples of graph domains, including social networks. The domain that we will focus on here is that of biological tissues, in which one might imagine hopping from cell to cell</p> <p>We can think of a “tissue domain” as an undirected graph over $n$ nodes, each of which represents a cell. We could construct this graph in many ways, including connecting each cell to its k nearest physical neighbors. Personally, I prefer using a Delaunay triangulation, as it creates a mesh that’s embeddable in 2D, which respects my own visual intuition. If you’re optimistic, you might also believe that it <a href="https://pubmed.ncbi.nlm.nih.gov/20082148/">captures the mechanical forces present in biological tissues</a>.</p> <p>To demonstrate this process, let’s create a simulated tissue domain. Our domain will simply consist of a bunch of cells scattered uniformly within a unit circle. After performing a Delaunay triangulation, we can zoom in to see that the cells are indeed connected to their spatial neighbors to form a 2D mesh.</p> <figure style="text-align: center;"> <img src="/assets/figures/fourier/tissue_domain.png" alt="" style="width:50%; display: block; margin: 0 auto;"/> <figcaption><strong>Figure 1:</strong> Cells arranged in a spatial graph to form a tissue domain. </figcaption> </figure> <p>Now let’s define the key mathematical objects associated with this tissue domain. Our graph can be represented by the symmetric adjacency matrix \(\mathbf{A} \in \{0,1\}^{n \times n}.\) Each entry of $\mathbf{A}$ is either $1$, which represents two cells that are spatially adjacent, or $0$, which represents two cells that are not adjacent. While we could weight these edges based on physical distances between cells, we will instead stick to simple binary edges for simplicity. We also will not consider self-loops, i.e. we have $ \mathbf{A}_{ii} = 0. $ Finally, the number of neighbors, or degree, of each cell $i$ is given by the diagonal degree matrix $ \mathbf{D} \in \mathbb{R}^{n \times n} $ with entries $ \mathbf{D} $ .</p> <hr/> <h2 id="transcriptional-signals">Transcriptional signals</h2> <p>A transcriptional signal is</p> <p>We can add some to our simulation. In real tissues, they might vary in their spatial scale, some looking like a region and some looking noisy. Allen atlas</p> <hr/> <h2 id="frequencies">Frequencies</h2> <details><summary>Why not the the first frequency?</summary> <p>The first of the frequency bases represents a constant signal over the graph, i.e. the smoothest signal possible. Alternatively, we could see this by taking a signal we know is constant – say the ones vector $\mathbf{1} = [1,…,1]^{\top}$ – and seeing if it satisfies the eigenvalue equation \(\mathbf{L} \mathbf{1} = \lambda \mathbf{1}.\) This is true for $\lambda = 0$; by definition, each row of the Laplacian sums to zero. Note that this is true for any multiple of the ones vector as well.</p> </details> <figure style="text-align: center;"> <img src="/assets/figures/fourier/frequencies.png" alt="" style="width:100%; display: block; margin: 0 auto;"/> <figcaption><strong>Figure 3:</strong> Cells arranged in a spatial graph form a tissue domain. </figcaption> </figure> <hr/> <h2 id="spectra">Spectra</h2> <hr/> <h2 id="filtering">Filtering</h2>]]></content><author><name>Kamal Maher</name></author><category term="spatial-omics"/><summary type="html"><![CDATA[An introduction to graph signal processing in biological tissues]]></summary></entry></feed>